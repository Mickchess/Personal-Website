import type { GazeDetections } from "../models/gaze";
import CVImage from "../utils/image";
export type Commands = {
    init: {
        request: {
            cmd: "init";
            url: string;
            workerId: string;
            modelName: string;
            modelVersion: number;
            publishableKey: string;
            options: any[];
        };
        response: {};
    };
    infer: {
        request: {
            cmd: "infer";
            img: ImageBitmap;
            options: any;
        };
        response: GazeDetections;
    };
};
export default class InferenceEngine {
    #private;
    url: string;
    constructor(url?: string);
    startWorker(modelName: string, modelVersion: number, publishableKey: string, options?: any): Promise<string>;
    stopWorker(workerId: string): Promise<boolean>;
    infer(workerId: string, img: ImageBitmap | CVImage, options?: any): Promise<GazeDetections>;
}
